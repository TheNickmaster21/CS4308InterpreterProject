Grammar for the (subset of Lua) language provided by professor

<program> → function <id> ( ) <block> end
<block> → <statement> <block> | <statement>
<statement> → <if_statement> | <assignment_statement> | <while_statement> | <print_statement> | <repeat_statement>
<if_statement> → if <boolean_expression> then <block> else <block> end | if <boolean_expression> then <block> end
<while_statement> → while <boolean_expression> do <block> end
<assignment_statement> -> <id> <assignment_operator> <arithmetic_expression> | <id> <assignment_operator> <id>
<repeat_statement> -> repeat <block> until <boolean_expression>
<print_statement> → print ( <arithmetic_expression> ) | print ( <id> )
<boolean_expression> → <arithmetic_expression> <relative_op> <arithmetic_expression> | <id> <relative_op> <arithmetic_expression> | <arithmetic_expression> <relative_op> <id> | <id> <relative_op> <id>
<relative_op> → le_operator | lt_operator | ge_operator | gt_operator | eq_operator | ne_operator
<arithmetic_expression> → <literal_integer> | <arithmetic_expression> <arithmetic_op> <arithmetic_expression> | <id> <arithmetic_op> <arithmetic_expression> | <id> <arithmetic_op> <id>
<arithmetic_op> → add_operator | sub_operator | mul_operator | div_operator